// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String
  username    String
  address     String?
  profilePic  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  products    Product[]        // Products listed by user
  cart        Cart?            // One cart per user
  purchases   PreviousPurchase[]
}

model Product {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  category    String
  price       Float
  status      String?   @default("available")
  createdAt   DateTime  @default(now())

  // Relations
  ownerId     Int
  owner       User      @relation(fields: [ownerId], references: [id])
  images      ProductImage[]
  cartItems   CartItem[]
  purchases   PreviousPurchase[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  productId Int
  imageUrl  String
  isMain    Boolean @default(false)
  createdAt DateTime @default(now())

  // Relations
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int      @default(1)

  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model PreviousPurchase {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  purchasedAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}
